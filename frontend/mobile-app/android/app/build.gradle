apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

// Add Kotlin version
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$rootProject.ext.kotlinVersion"
    }
}

react {
    // Existing react configuration...
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'

// Add the configurations block to force specific versions
configurations.all {
    resolutionStrategy {
        force "com.google.android.gms:play-services-base:${rootProject.ext.playServicesVersion}"
        force "com.google.android.gms:play-services-maps:${rootProject.ext.playServicesVersion}"
        force "com.google.android.gms:play-services-location:${rootProject.ext.playServicesLocationVersion}"
    }
}

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.aerofit"
    defaultConfig {
        applicationId "com.aerofit"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    
    // Java and Kotlin compatibility settings
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = '17'
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // Resolve library conflicts
    packagingOptions {
        pickFirst 'lib/x86/libgnustl_shared.so'
        pickFirst 'lib/x86_64/libgnustl_shared.so'
        pickFirst 'lib/armeabi-v7a/libgnustl_shared.so'
        pickFirst 'lib/arm64-v8a/libgnustl_shared.so'
        excludes += [
            'META-INF/DEPENDENCIES',
            'META-INF/LICENSE',
            'META-INF/NOTICE',
            'META-INF/LICENSE.txt',
            'META-INF/NOTICE.txt'
        ]
    }
}

repositories {
    mavenCentral()
    google()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // React Native core
    implementation("com.facebook.react:react-android")

    // Hermes or JSC
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
    
    // OSM Dependencies with comprehensive set
    def osmdroidVersion = "6.1.17"
    implementation "org.osmdroid:osmdroid-android:$osmdroidVersion"
    implementation "org.osmdroid:osmdroid-wms:$osmdroidVersion"
    implementation "org.osmdroid:osmdroid-mapsforge:$osmdroidVersion"
    
    // Additional OSM-related dependencies
    implementation "org.slf4j:slf4j-simple:1.7.36"
    
    // Android support libraries
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.multidex:multidex:2.0.1"
    
    // WebView support
    implementation "androidx.webkit:webkit:1.7.0"
    
    // Network and caching
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okio:okio:3.3.0'

    // Location services - use the ext variables
    implementation "com.google.android.gms:play-services-base:${rootProject.ext.playServicesVersion}"
    implementation "com.google.android.gms:play-services-maps:${rootProject.ext.playServicesVersion}"
    implementation "com.google.android.gms:play-services-location:${rootProject.ext.playServicesLocationVersion}"
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
applyNativeModulesAppBuildGradle(project)